{"version":3,"sources":["serviceWorker.js","TCInput.js","ASMDisplay.js","index.js"],"names":["Boolean","window","location","hostname","match","TCInput","event","this","props","callback","target","value","Control","type","onChange","getContent","bind","placeholder","React","Component","protoTypes","PropTypes","func","ASMDisplay","onClickHandlerStart","start","innerHTML","setState","onClickHandlerFPS","fps","onClickHandlerType","state","asmDisplaydata","StartValue","TCinputdata","TCdata","replace","FPSRate","OffsetType","OffsetCalcString","String","InputValue","OffsetCalcValue","HourStartValueResult","DivideValue","OffsetCalcValueResult","SetCalc","DropAmountMinute","DivideValueResult","SetDivide","TCHour","Number","split","TCMinute","TCSec","TCFrame","FrameMultiplier","Drop","OffsetTypeSeconds","cleanedSMPTE_F","cleanedSMPTE_S","cleanedSMPTE_M","DropAmountHour","TCinFrames","Math","ceil","floor","BacktoSMPTEframes","BacktoSMPTEseconds","BacktoSMPTEMinutes","BacktoSMPTEHours","BackToSMPTE","Prepend","Text","id","as","InputGroup","Append","variant","title","class","Item","active","onClick","Index","TC","params","sm","formTCInput","FPSdata","FPS","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64c64244.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\n\nclass TCInput extends React.Component {\n\n  getContent(event) {\n    this.props.callback(event.target.value);\n    }\n\n  render() {\n    return (\n      <Container>\n        <InputGroup>\n          <Form.Control type=\"text\" onChange={this.getContent.bind(this)} placeholder=\"Enter TC: --:--:--.--\"/>\n        </InputGroup>\n        </Container>\n    );\n  }\n}\n\nTCInput.protoTypes = {\n  callback : PropTypes.func,\n}\n\nexport default TCInput;\n","import React from 'react';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './index.css';\n\nclass ASMDisplay extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state ={\n      start: \"00\",\n      fps: \"23.98\",\n      type: \"ASM\",\n      asmDisplaydata: \"--:--:--.--\",\n    }\n  }\n\n  onClickHandlerStart = event => {\n      const start = event.target.innerHTML;\n      this.setState({ start } )\n  }\n  onClickHandlerFPS = event => {\n      const fps = event.target.innerHTML;\n      this.setState({ fps } )\n}\n\nonClickHandlerType = event => {\n  const type = event.target.innerHTML;\n  this.setState({ type })\n}\n\n\n\n  render() {\n    var TCinputdata = this.props.TCdata.replace(\".\",\":\").replace(\".\",\":\").replace(\".\",\":\").replace(\".\",\":\").replace(\";\",\":\").replace(\";\",\":\").replace(\";\",\":\").replace(\";\",\":\")\n    var FPSRate = this.state.fps;\n    var asmDisplaydata = this.state.asmDisplaydata;\n    var OffsetType = this.state.type;\n    var OffsetCalcString = String(this.state.fps + \" \" + this.state.type)\n\n    var StartValue\n\n    function SetStart(InputValue) {\n      if (InputValue === \"00\") {\n        StartValue = 0\n      } else if (InputValue === \"01\") {\n        StartValue = 1\n      } else if (InputValue === \"10\") {\n        StartValue = 10\n      }\n      return StartValue\n    }\n\n\n    var HourStartValueResult = SetStart(this.state.start)\n\n    var OffsetCalcValue\n\n    function SetCalc(InputValue) {\n      if (InputValue === \"23.98 ASM\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"24 ASM\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"PAL ASM\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"NTSC NDF ASM\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"NTSC DF ASM\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"23.98 1.5 sec\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"24 1.5 sec\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"PAL 1.5 sec\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"NTSC NDF 1.5 sec\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"NTSC DF 1.5 sec\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"23.98 To 23.98\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"23.98 To 24\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"23.98 To PAL\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"23.98 To NTSC DF\") {\n        OffsetCalcValue = 1.25124962780642\n      } else if (InputValue === \"23.98 To NTSC NDF\") {\n        OffsetCalcValue = 1.2500001787724\n      } else if (InputValue === \"24 To 23.98\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"24 To 24\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"24 To PAL\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"24 To NTSC DF\") {\n        OffsetCalcValue = 1.25124962780642\n      } else if (InputValue === \"24 To NTSC NDF\") {\n        OffsetCalcValue = 1.2500001787724\n      } else if (InputValue === \"PAL To 23.98\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"PAL To 24\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"PAL To PAL\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"PAL To NTSC DF\") {\n        OffsetCalcValue = 1.25124962780642\n      } else if (InputValue === \"PAL To NTSC NDF\") {\n        OffsetCalcValue = 1.2500001787724\n      } else if (InputValue === \"NTSC DF To 23.98\") {\n        OffsetCalcValue = 0.799201037053617\n      } else if (InputValue === \"NTSC DF To 24\") {\n        OffsetCalcValue = 0.799201037053617\n      } else if (InputValue === \"NTSC DF To PAL\") {\n        OffsetCalcValue = 0.799201037053617\n      } else if (InputValue === \"NTSC DF To NTSC DF\") {\n        OffsetCalcValue = 1\n      } else if (InputValue === \"NTSC DF To NTSC NDF\") {\n        OffsetCalcValue = 0.999001439195418\n      } else if (InputValue === \"NTSC NDF To 23.98\") {\n        OffsetCalcValue = 0.799999885591553\n      } else if (InputValue === \"NTSC NDF To 24\") {\n        OffsetCalcValue = 0.799999885591553\n      } else if (InputValue === \"NTSC NDF To PAL\") {\n        OffsetCalcValue = 0.799999885591553\n      } else if (InputValue === \"NTSC NDF To NTSC DF\") {\n        OffsetCalcValue = 1.00099955909492\n      } else if (InputValue === \"NTSC NDF To NTSC NDF\") {\n        OffsetCalcValue = 1\n      }\n      return OffsetCalcValue\n    }\n\n\n    var OffsetCalcValueResult = SetCalc(OffsetCalcString)\n\n    var DivideValue\n\n    function SetDivide(InputValue) {\n      if (InputValue === \"23.98 ASM\") {\n        DivideValue = 24\n      } else if (InputValue === \"24 ASM\") {\n        DivideValue = 24\n      } else if (InputValue === \"PAL ASM\") {\n        DivideValue = 25\n      } else if (InputValue === \"NTSC NDF ASM\") {\n        DivideValue = 30\n      } else if (InputValue === \"NTSC DF ASM\") {\n        DivideValue = 30\n      } else if (InputValue === \"23.98 1.5 sec\") {\n        DivideValue = 24\n      } else if (InputValue === \"24 1.5 sec\") {\n        DivideValue = 24\n      } else if (InputValue === \"PAL 1.5 sec\") {\n        DivideValue = 25\n      } else if (InputValue === \"NTSC NDF 1.5 sec\") {\n        DivideValue = 30\n      } else if (InputValue === \"NTSC DF 1.5 sec\") {\n        DivideValue = 30\n      } else if (InputValue === \"23.98 To 23.98\") {\n        DivideValue = 24\n      } else if (InputValue === \"23.98 To 24\") {\n        DivideValue = 24\n      } else if (InputValue === \"23.98 To PAL\") {\n        DivideValue = 25\n      } else if (InputValue === \"23.98 To NTSC DF\") {\n        DivideValue = 30\n      } else if (InputValue === \"23.98 To NTSC NDF\") {\n        DivideValue = 30\n      } else if (InputValue === \"24 To 23.98\") {\n        DivideValue = 24\n      } else if (InputValue === \"24 To 24\") {\n        DivideValue = 24\n      } else if (InputValue === \"24 To PAL\") {\n        DivideValue = 25\n      } else if (InputValue === \"24 To NTSC DF\") {\n        DivideValue = 30\n      } else if (InputValue === \"24 To NTSC NDF\") {\n        DivideValue = 30\n      } else if (InputValue === \"PAL To 23.98\") {\n        DivideValue = 24\n      } else if (InputValue === \"PAL To 24\") {\n        DivideValue = 24\n      } else if (InputValue === \"PAL To PAL\") {\n        DivideValue = 25\n      } else if (InputValue === \"PAL To NTSC DF\") {\n        DivideValue = 30\n      } else if (InputValue === \"PAL To NTSC NDF\") {\n        DivideValue = 30\n      } else if (InputValue === \"NTSC DF To 23.98\") {\n        DivideValue = 24\n      } else if (InputValue === \"NTSC DF To 24\") {\n        DivideValue = 24\n      } else if (InputValue === \"NTSC DF To PAL\") {\n        DivideValue = 25\n      } else if (InputValue === \"NTSC DF To NTSC DF\") {\n        DivideValue = 30\n      } else if (InputValue === \"NTSC DF To NTSC NDF\") {\n        DivideValue = 30\n      } else if (InputValue === \"NTSC NDF To 23.98\") {\n        DivideValue = 24\n      } else if (InputValue === \"NTSC NDF To 24\") {\n        DivideValue = 24\n      } else if (InputValue === \"NTSC NDF To PAL\") {\n        DivideValue = 25\n      } else if (InputValue === \"NTSC NDF To NTSC DF\") {\n        DivideValue = 30\n      } else if (InputValue === \"NTSC NDF To NTSC NDF\") {\n        DivideValue = 30\n      }\n      return DivideValue\n    }\n\n    var DivideValueResult = SetDivide(OffsetCalcString)\n\n    var TCHour = Number(TCinputdata.split(\":\")[0]);\n    var TCMinute = Number(TCinputdata.split(\":\")[1]);\n    var TCSec = Number(TCinputdata.split(\":\")[2]);\n    var TCFrame = Number(TCinputdata.split(\":\")[3]);\n    var FrameMultiplier = Number(FPSRate.replace(\"23.98\",24).replace(\"24\",24).replace(\"PAL\",25).replace(\"NTSC NDF\",30).replace(\"NTSC DF\",30));\n    var Drop = FPSRate.replace(\"23.98\",0).replace(\"24\",0).replace(\"PAL\",0).replace(\"NTSC NDF\",0).replace(\"NTSC DF\",0);\n    var OffsetTypeSeconds = OffsetType.replace(\"ASM\",100).replace(\"1.5 sec\",1.5).replace(\"To 23.98\",0).replace(\"To 24\",0).replace(\"To PAL\",0).replace(\"To NTSC NDF\",0).replace(\"To NTSC DF\",0)\n    var DropAmountMinute\n    if (TCMinute <= 9) {\n      DropAmountMinute = TCMinute * 2\n    } else if (TCMinute === 10) {\n      DropAmountMinute = 18\n    } else if (TCMinute >= 11 && TCMinute <= 19 ) {\n      DropAmountMinute = (TCMinute * 2) - 2\n    } else if (TCMinute === 20) {\n      DropAmountMinute = 36\n    } else if (TCMinute >= 21 && TCMinute <= 29) {\n      DropAmountMinute = TCMinute * 2 - 4\n    } else if (TCMinute === 30) {\n      DropAmountMinute = 54\n    } else if (TCMinute >= 31 && TCMinute <= 39) {\n      DropAmountMinute = TCMinute * 2 - 6\n    } else if (TCMinute === 40) {\n      DropAmountMinute = 72\n    } else if (TCMinute >= 41 && TCMinute <= 49) {\n      DropAmountMinute = TCMinute * 2 - 8\n    } else if (TCMinute === 50) {\n      DropAmountMinute = 90\n    } else if (TCMinute >= 51 && TCMinute <= 59) {\n      DropAmountMinute = ((TCMinute * 2) - 10)\n    }\n    var DropAmountHour = TCHour * 108\n\n\n    var TCinFrames = Math.ceil(OffsetCalcValueResult * (0 + ((TCHour - HourStartValueResult) * 60 * 60 * FrameMultiplier) + (TCMinute * 60 * FrameMultiplier) + (TCSec * FrameMultiplier) + Math.floor((OffsetTypeSeconds*FrameMultiplier)) + TCFrame - (Drop * (DropAmountMinute + DropAmountHour))))\n\n\n    var BacktoSMPTEframes = TCinFrames % DivideValueResult\n    var BacktoSMPTEseconds = ((TCinFrames - BacktoSMPTEframes)/DivideValueResult) % 60\n    var BacktoSMPTEMinutes = ((((TCinFrames - BacktoSMPTEframes)/DivideValueResult) - BacktoSMPTEseconds) / 60) % 60\n    var BacktoSMPTEHours = (((((TCinFrames - BacktoSMPTEframes)/DivideValueResult) - BacktoSMPTEseconds) / 60) - BacktoSMPTEMinutes) / 60 + HourStartValueResult\n    var cleanedSMPTE_F\n    var cleanedSMPTE_S\n    var cleanedSMPTE_M\n    var cleanedSMPTE_H\n\n    if (BacktoSMPTEframes <= 9 ) {\n      cleanedSMPTE_F = \"0\" +BacktoSMPTEframes\n    } else {\n      cleanedSMPTE_F = BacktoSMPTEframes\n    }\n\n    if (BacktoSMPTEseconds <= 9 ) {\n      cleanedSMPTE_S = \"0\" + BacktoSMPTEseconds\n    } else {\n      cleanedSMPTE_S = BacktoSMPTEseconds\n    }\n\n    if (BacktoSMPTEMinutes < 10 ) {\n      cleanedSMPTE_M = \"0\" + String(BacktoSMPTEMinutes)\n    } else {\n      cleanedSMPTE_M = BacktoSMPTEMinutes\n    }\n\n    if (BacktoSMPTEHours < 10 ) {\n      cleanedSMPTE_H = \"0\" + String(BacktoSMPTEHours)\n    } else {\n      cleanedSMPTE_H = BacktoSMPTEHours\n    }\n\n    var BackToSMPTE = cleanedSMPTE_H + \":\" + cleanedSMPTE_M +  \":\" + cleanedSMPTE_S +  \".\" +  cleanedSMPTE_F\n\n    return (\n      <div>\n                <InputGroup >\n                <InputGroup.Prepend>\n                <InputGroup.Text id=\"basic-addon1\">Hour Start:</InputGroup.Text>\n                </InputGroup.Prepend>\n                    <DropdownButton\n                    as={InputGroup.Append}\n                    variant=\"dark\"\n                    title= {this.state.start}>\n                    <div class=\"overflowdrop\">\n                    <Dropdown.Item  active={this.state.start === \"00\"} onClick={this.onClickHandlerStart}>00</Dropdown.Item>\n                    <Dropdown.Item  active={this.state.start === \"01\"} onClick={this.onClickHandlerStart}>01</Dropdown.Item>\n                    <Dropdown.Item  active={this.state.start === \"10\"} onClick={this.onClickHandlerStart}>10</Dropdown.Item>\n                    </div>\n                  </DropdownButton>\n                  <InputGroup.Prepend>\n                  <InputGroup.Text id=\"basic-addon1\">FPS:</InputGroup.Text>\n                  </InputGroup.Prepend>\n                <DropdownButton\n                as={InputGroup.Append}\n                variant=\"dark\"\n                title= {this.state.fps}>\n                <div class=\"overflowdrop\">\n                <Dropdown.Item  active={this.state.fps === \"23.98\"} onClick={this.onClickHandlerFPS }>23.98</Dropdown.Item>\n                <Dropdown.Item  active={this.state.fps === \"24\"} onClick={this.onClickHandlerFPS}>24</Dropdown.Item>\n                <Dropdown.Item  active={this.state.fps === \"PAL\"} onClick={this.onClickHandlerFPS}>PAL</Dropdown.Item>\n                <Dropdown.Item  active={this.state.fps === \"NTSC DF\"} onClick={this.onClickHandlerFPS}>NTSC DF</Dropdown.Item>\n                <Dropdown.Item  active={this.state.fps === \"NTSC NDF\"} onClick={this.onClickHandlerFPS}>NTSC NDF</Dropdown.Item>\n                </div>\n              </DropdownButton>\n              <InputGroup.Prepend>\n              <InputGroup.Text id=\"basic-addon1\">Offset Type:</InputGroup.Text>\n              </InputGroup.Prepend>\n              <DropdownButton\n              as={InputGroup.Append}\n              variant=\"dark\"\n              title= {this.state.type}\n              >\n              <div class=\"overflowdrop\">\n                <Dropdown.Item active={this.state.type === \"ASM\"} onClick={this.onClickHandlerType}>ASM</Dropdown.Item>\n                <Dropdown.Item active={this.state.type === \"1.5 sec\"} onClick={this.onClickHandlerType}>1.5 sec</Dropdown.Item>\n                <Dropdown.Item  active={this.state.fps === \"To 23.98\"} onClick={this.onClickHandlerType}>To 23.98</Dropdown.Item>\n                <Dropdown.Item  active={this.state.fps === \"To 24\"} onClick={this.onClickHandlerType}>To 24</Dropdown.Item>\n                <Dropdown.Item  active={this.state.fps === \"To PAL\"} onClick={this.onClickHandlerType}>To PAL</Dropdown.Item>\n                <Dropdown.Item  active={this.state.fps === \"To NTSC DF\"} onClick={this.onClickHandlerType}>To NTSC DF</Dropdown.Item>\n                <Dropdown.Item  active={this.state.fps === \"To NTSC NDF\"} onClick={this.onClickHandlerType}>To NTSC NDF</Dropdown.Item>\n                </div>\n              </DropdownButton>\n              <InputGroup.Prepend>\n                <Button variant=\"warning\" onClick={() => this.setState({ asmDisplaydata: BackToSMPTE})}>Calculate</Button>\n              </InputGroup.Prepend>\n              <InputGroup.Append>\n           <InputGroup.Text >{asmDisplaydata}</InputGroup.Text>\n          </InputGroup.Append>\n        </InputGroup>\n  </div>\n  );\n}\n}\n\nexport default ASMDisplay;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport TCInput from './TCInput';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ASMDisplay from './ASMDisplay';\n\nclass Index extends React.Component {\n    constructor(props){\n      super(props);\n      this.state= {\n        TC : \"\"\n      }\n    }\n\n    formTCInput(params) {\n      this.setState({\n        TC : params\n      })\n    }\n\n    render() {\n\n      return(\n          <div>\n          <Row>\n            <Col sm={3.5}>\n                <TCInput callback={this.formTCInput.bind(this)} />\n            </Col>\n            <Col sm={8.5}>\n                <ASMDisplay TCdata={this.state.TC} FPSdata={this.state.FPS} />\n            </Col>\n            </Row>\n            <Row>\n              <p class=\"WhiteFont\">Please Note: Calculated Timecode may be 1-5 frames before/after the true timecode when converting between frame rates. </p>\n            </Row>\n\n</div>\n\n      );\n    }\n\n    }\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}